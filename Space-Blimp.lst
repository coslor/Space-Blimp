ca65 V2.19 - Git 43881af
Main file   : space-blimp.s
Current file: space-blimp.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.19 - Git 43881af
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.19 - Git 43881af"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	on
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.dbg		file, "space-blimp.c", 8174, 1613952556
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/stdint.h", 6196, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/stdio.h", 6189, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/stddef.h", 3057, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/stdarg.h", 2913, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/stdbool.h", 2506, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/c64.h", 7001, 1613281956
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/_vic2.h", 10835, 1613281956
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/_sid.h", 3626, 1613281956
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/_6526.h", 3962, 1613281956
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/string.h", 5104, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/stdlib.h", 5999, 1613281958
000000r 1               	.dbg		file, "C:\Users\chris\cc65/include/assert.h", 3000, 1613281956
000000r 1               	.dbg		file, "space-blimp.h", 2716, 1613950962
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.forceimport	initmainargs
000000r 1               	.dbg		sym, "printf", "00", extern, "_printf"
000000r 1               	.dbg		sym, "strlen", "00", extern, "_strlen"
000000r 1               	.dbg		sym, "exit", "00", extern, "_exit"
000000r 1               	.dbg		sym, "_afailed", "00", extern, "__afailed"
000000r 1               	.dbg		sym, "loadbin", "00", extern, "_loadbin"
000000r 1               	.import		_printf
000000r 1               	.import		_strlen
000000r 1               	.import		_exit
000000r 1               	.import		__afailed
000000r 1               	.export		_get_device_num
000000r 1               	.export		_set_sprite_x
000000r 1               	.import		_loadbin
000000r 1               	.export		_clr_screen
000000r 1               	.export		_init_MOB
000000r 1               	.export		_move_mobs
000000r 1               	.export		_sprite_switching_bouncy_border_collision_handler
000000r 1               	.export		_bouncy_border_collision_handler
000000r 1               	.export		_velocity_movement_handler
000000r 1               	.export		_load_sprites
000000r 1               	.export		_init_mobs
000000r 1               	.export		_set_bit
000000r 1               	.export		_move_mob
000000r 1               	.export		_draw_mobs
000000r 1               	.export		_dump_mob
000000r 1               	.export		_draw_mob
000000r 1               	.export		_next_sprite_ptr
000000r 1               	.export		_prev_sprite_ptr
000000r 1               	.export		_mobs
000000r 1               	.export		_sprite_defs
000000r 1               	.export		_sprite_data_vicptr
000000r 1               	.export		_screen
000000r 1               	.export		_pow2
000000r 1               	.export		_blimp_ptrs
000000r 1               	.export		_bomb_ptrs
000000r 1               	.export		_blimp_ptr_len
000000r 1               	.export		_bomb_ptr_len
000000r 1               	.export		_x_counter
000000r 1               	.export		_y_counter
000000r 1               	.export		_fn
000000r 1               	.export		_fn2
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"DATA"
000000r 1               
000000r 1               _sprite_defs:
000000r 1  00 30        	.word	$3000
000002r 1               _sprite_data_vicptr:
000002r 1  F8 07        	.word	$07F8
000004r 1               _screen:
000004r 1  00 04        	.word	$0400
000006r 1               _pow2:
000006r 1  01           	.byte	$01
000007r 1  02           	.byte	$02
000008r 1  04           	.byte	$04
000009r 1  08           	.byte	$08
00000Ar 1  10           	.byte	$10
00000Br 1  20           	.byte	$20
00000Cr 1  40           	.byte	$40
00000Dr 1  80           	.byte	$80
00000Er 1               _blimp_ptrs:
00000Er 1  C1           	.byte	$C1
00000Fr 1  C3           	.byte	$C3
000010r 1               _bomb_ptrs:
000010r 1  C0           	.byte	$C0
000011r 1  C2           	.byte	$C2
000012r 1               _blimp_ptr_len:
000012r 1  02           	.byte	$02
000013r 1               _bomb_ptr_len:
000013r 1  02           	.byte	$02
000014r 1               _fn:
000014r 1  rr rr        	.addr	S0001
000016r 1               _fn2:
000016r 1  rr rr        	.addr	S0002
000018r 1               
000018r 1               .segment	"RODATA"
000000r 1               
000000r 1               S0003:
000000r 1  C6 41 49 4C  	.byte	$C6,$41,$49,$4C,$45,$44,$20,$54,$4F,$20,$4C,$4F,$41,$44,$20,$27
000004r 1  45 44 20 54  
000008r 1  4F 20 4C 4F  
000010r 1  25 53 27 20  	.byte	$25,$53,$27,$20,$57,$49,$54,$48,$20,$45,$52,$52,$4F,$52,$20,$43
000014r 1  57 49 54 48  
000018r 1  20 45 52 52  
000020r 1  4F 44 45 20  	.byte	$4F,$44,$45,$20,$25,$44,$2E,$0D,$20,$D4,$52,$59,$49,$4E,$47,$20
000024r 1  25 44 2E 0D  
000028r 1  20 D4 52 59  
000030r 1  41 4C 54 45  	.byte	$41,$4C,$54,$45,$52,$4E,$41,$54,$45,$20,$46,$49,$4C,$45,$4E,$41
000034r 1  52 4E 41 54  
000038r 1  45 20 46 49  
000040r 1  4D 45 20 27  	.byte	$4D,$45,$20,$27,$25,$53,$27,$2E,$2E,$2E,$0D,$00
000044r 1  25 53 27 2E  
000048r 1  2E 2E 0D 00  
00004Cr 1               S0004:
00004Cr 1  D3 50 52 49  	.byte	$D3,$50,$52,$49,$54,$45,$20,$4C,$4F,$41,$44,$20,$46,$41,$49,$4C
000050r 1  54 45 20 4C  
000054r 1  4F 41 44 20  
00005Cr 1  45 44 20 57  	.byte	$45,$44,$20,$57,$49,$54,$48,$20,$43,$4F,$44,$45,$20,$25,$44,$0D
000060r 1  49 54 48 20  
000064r 1  43 4F 44 45  
00006Cr 1  00           	.byte	$00
00006Dr 1               S0006:
00006Dr 1  D3 50 41 43  	.byte	$D3,$50,$41,$43,$45,$20,$C2,$4C,$49,$4D,$50,$2C,$20,$4D,$4F,$54
000071r 1  45 20 C2 4C  
000075r 1  49 4D 50 2C  
00007Dr 1  48 41 20 4D  	.byte	$48,$41,$20,$4D,$4F,$54,$48,$41,$21,$21,$21,$0D,$00
000081r 1  4F 54 48 41  
000085r 1  21 21 21 0D  
00008Ar 1               S000C:
00008Ar 1  45 4E 41 42  	.byte	$45,$4E,$41,$42,$4C,$45,$44,$3A,$25,$44,$20,$58,$3A,$25,$44,$20
00008Er 1  4C 45 44 3A  
000092r 1  25 44 20 58  
00009Ar 1  59 3A 25 44  	.byte	$59,$3A,$25,$44,$20,$0D,$00
00009Er 1  20 0D 00     
0000A1r 1               S0008:
0000A1r 1  CD CF C2 20  	.byte	$CD,$CF,$C2,$20,$25,$50,$20,$C1,$43,$54,$49,$56,$45,$3A,$20,$25
0000A5r 1  25 50 20 C1  
0000A9r 1  43 54 49 56  
0000B1r 1  44 20 0D 00  	.byte	$44,$20,$0D,$00
0000B5r 1               S0009:
0000B5r 1  09 D3 50 52  	.byte	$09,$D3,$50,$52,$49,$54,$45,$20,$25,$44,$20,$D0,$54,$52,$3A,$25
0000B9r 1  49 54 45 20  
0000BDr 1  25 44 20 D0  
0000C5r 1  44 0D 00     	.byte	$44,$0D,$00
0000C8r 1               S0005:
0000C8r 1  53 50 52 49  	.byte	$53,$50,$52,$49,$54,$45,$53,$20,$4C,$4F,$41,$44,$45,$44,$21,$0D
0000CCr 1  54 45 53 20  
0000D0r 1  4C 4F 41 44  
0000D8r 1  00           	.byte	$00
0000D9r 1               S0011:
0000D9r 1  53 50 41 43  	.byte	$53,$50,$41,$43,$45,$2D,$42,$4C,$49,$4D,$50,$2E,$43,$00
0000DDr 1  45 2D 42 4C  
0000E1r 1  49 4D 50 2E  
0000E7r 1               S0010	:=	S0011+0
0000E7r 1               S000D	:=	S0011+0
0000E7r 1               S0012	:=	S0011+0
0000E7r 1               S000F	:=	S0011+0
0000E7r 1               S0007	:=	S0011+0
0000E7r 1               S000A:
0000E7r 1  09 CC 4F 43  	.byte	$09,$CC,$4F,$43,$3A,$20,$25,$44,$2C,$25,$44,$0D,$00
0000EBr 1  3A 20 25 44  
0000EFr 1  2C 25 44 0D  
0000F4r 1               S000B:
0000F4r 1  0D D3 50 52  	.byte	$0D,$D3,$50,$52,$49,$54,$45,$20,$25,$44,$3A,$0D,$00
0000F8r 1  49 54 45 20  
0000FCr 1  25 44 3A 0D  
000101r 1               S0001:
000101r 1  53 50 52 49  	.byte	$53,$50,$52,$49,$54,$45,$53,$2E,$50,$52,$47,$00
000105r 1  54 45 53 2E  
000109r 1  50 52 47 00  
00010Dr 1               S0002:
00010Dr 1  53 50 52 49  	.byte	$53,$50,$52,$49,$54,$45,$53,$00
000111r 1  54 45 53 00  
000115r 1               
000115r 1               .segment	"BSS"
000000r 1               
000000r 1               _mobs:
000000r 1  00 00 00 00  	.res	48,$00
000004r 1  00 00 00 00  
000008r 1  00 00 00 00  
000030r 1               _x_counter:
000030r 1  00 00        	.res	2,$00
000032r 1               _y_counter:
000032r 1  00 00        	.res	2,$00
000034r 1               
000034r 1               ; ---------------------------------------------------------------
000034r 1               ; unsigned char __near__ get_device_num (void)
000034r 1               ; ---------------------------------------------------------------
000034r 1               
000034r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_get_device_num: near
000000r 1               
000000r 1               	.dbg	func, "get_device_num", "00", extern, "_get_device_num"
000000r 1               	.dbg	sym, "d", "00", auto, -2
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1               	.dbg	line, "space-blimp.c", 141
000000r 1  20 rr rr     	jsr     decsp2
000003r 1  A2 00        	ldx     #$00
000005r 1  A5 BA        	lda     $00BA
000007r 1  20 rr rr     	jsr     stax0sp
00000Ar 1               	.dbg	line, "space-blimp.c", 142
00000Ar 1  C9 08        	cmp     #$08
00000Cr 1  8A           	txa
00000Dr 1  E9 00        	sbc     #$00
00000Fr 1  50 02        	bvc     L0003
000011r 1  49 80        	eor     #$80
000013r 1  30 10        L0003:	bmi     L0008
000015r 1  20 rr rr     	jsr     ldax0sp
000018r 1  C9 20        	cmp     #$20
00001Ar 1  8A           	txa
00001Br 1  E9 00        	sbc     #$00
00001Dr 1  70 02        	bvs     L0005
00001Fr 1  49 80        	eor     #$80
000021r 1  10 07        L0005:	bpl     L0002
000023r 1               	.dbg	line, "space-blimp.c", 143
000023r 1  A2 00        	ldx     #$00
000025r 1  A9 08        L0008:	lda     #$08
000027r 1  20 rr rr     	jsr     stax0sp
00002Ar 1               	.dbg	line, "space-blimp.c", 146
00002Ar 1  A2 00        L0002:	ldx     #$00
00002Cr 1  A1 rr        	lda     (sp,x)
00002Er 1               	.dbg	line, "space-blimp.c", 147
00002Er 1  4C rr rr     	jmp     incsp2
000031r 1               
000031r 1               	.dbg	line
000031r 1               .endproc
000031r 1               
000031r 1               ; ---------------------------------------------------------------
000031r 1               ; void __near__ set_sprite_x (unsigned char sprite_num, int x_pos)
000031r 1               ; ---------------------------------------------------------------
000031r 1               
000031r 1               .segment	"CODE"
000031r 1               
000031r 1               .proc	_set_sprite_x: near
000031r 1               
000031r 1               	.dbg	func, "set_sprite_x", "00", extern, "_set_sprite_x"
000031r 1               	.dbg	sym, "sprite_num", "00", auto, 2
000031r 1               	.dbg	sym, "x_pos", "00", auto, 0
000031r 1               	.dbg	sym, "high_byte", "00", auto, -1
000031r 1               
000031r 1               .segment	"CODE"
000031r 1               
000031r 1               	.dbg	line, "space-blimp.c", 277
000031r 1  20 rr rr     	jsr     pushax
000034r 1               	.dbg	line, "space-blimp.c", 280
000034r 1  20 rr rr     	jsr     decsp1
000037r 1  A0 03        	ldy     #$03
000039r 1  A2 00        	ldx     #$00
00003Br 1  B1 rr        	lda     (sp),y
00003Dr 1  C9 09        	cmp     #$09
00003Fr 1  90 12        	bcc     L0006
000041r 1  A9 rr        	lda     #<(S000D)
000043r 1  A2 rr        	ldx     #>(S000D)
000045r 1  20 rr rr     	jsr     pushax
000048r 1  A2 01        	ldx     #$01
00004Ar 1  A9 18        	lda     #$18
00004Cr 1  20 rr rr     	jsr     __afailed
00004Fr 1               	.dbg	line, "space-blimp.c", 282
00004Fr 1  A0 03        	ldy     #$03
000051r 1  A2 00        	ldx     #$00
000053r 1  B1 rr        L0006:	lda     (sp),y
000055r 1  0A           	asl     a
000056r 1  90 01        	bcc     L0004
000058r 1  E8           	inx
000059r 1  85 rr        L0004:	sta     ptr1
00005Br 1  86 rr        	stx     ptr1+1
00005Dr 1  18           	clc
00005Er 1  A5 rr        	lda     ptr1
000060r 1  85 rr        	sta     ptr1
000062r 1  A9 D0        	lda     #$D0
000064r 1  65 rr        	adc     ptr1+1
000066r 1  85 rr        	sta     ptr1+1
000068r 1  A0 01        	ldy     #$01
00006Ar 1  B1 rr        	lda     (sp),y
00006Cr 1  88           	dey
00006Dr 1  91 rr        	sta     (ptr1),y
00006Fr 1               	.dbg	line, "space-blimp.c", 284
00006Fr 1  A0 04        	ldy     #$04
000071r 1  20 rr rr     	jsr     pushwysp
000074r 1  A2 01        	ldx     #$01
000076r 1  A9 00        	lda     #$00
000078r 1  20 rr rr     	jsr     tosdivax
00007Br 1  A0 00        	ldy     #$00
00007Dr 1  91 rr        	sta     (sp),y
00007Fr 1               	.dbg	line, "space-blimp.c", 285
00007Fr 1  A2 D0        	ldx     #$D0
000081r 1  A9 10        	lda     #$10
000083r 1  20 rr rr     	jsr     pushax
000086r 1  A0 05        	ldy     #$05
000088r 1  B1 rr        	lda     (sp),y
00008Ar 1  20 rr rr     	jsr     pusha
00008Dr 1  A0 03        	ldy     #$03
00008Fr 1  B1 rr        	lda     (sp),y
000091r 1  20 rr rr     	jsr     boolne
000094r 1  20 rr rr     	jsr     _set_bit
000097r 1               	.dbg	line, "space-blimp.c", 286
000097r 1  4C rr rr     	jmp     incsp4
00009Ar 1               
00009Ar 1               	.dbg	line
00009Ar 1               .endproc
00009Ar 1               
00009Ar 1               ; ---------------------------------------------------------------
00009Ar 1               ; void __near__ clr_screen (void)
00009Ar 1               ; ---------------------------------------------------------------
00009Ar 1               
00009Ar 1               .segment	"CODE"
00009Ar 1               
00009Ar 1               .proc	_clr_screen: near
00009Ar 1               
00009Ar 1               	.dbg	func, "clr_screen", "00", extern, "_clr_screen"
00009Ar 1               
00009Ar 1               .segment	"CODE"
00009Ar 1               
00009Ar 1               	.dbg	line, "space-blimp.c", 289
00009Ar 1  4C 44 E5     	jmp     $E544
00009Dr 1               
00009Dr 1               	.dbg	line
00009Dr 1               .endproc
00009Dr 1               
00009Dr 1               ; ---------------------------------------------------------------
00009Dr 1               ; struct MOB *__near__ init_MOB (unsigned char num, unsigned char active, unsigned char sprite_num, unsigned char mcolor, unsigned char *sprite_ptrs, unsigned char sprite_ptrs_len, unsigned int x, unsigned char expand_x, unsigned char y, unsigned char expand_y, signed char xvel, signed char yvel, unsigned char color, struct Move_Counter *x_counter, struct Move_Counter *y_counter, void (*coll_handler)(struct MOB *, int), void (*move_handler)(struct MOB *))
00009Dr 1               ; ---------------------------------------------------------------
00009Dr 1               
00009Dr 1               .segment	"CODE"
00009Dr 1               
00009Dr 1               .proc	_init_MOB: near
00009Dr 1               
00009Dr 1               	.dbg	func, "init_MOB", "00", extern, "_init_MOB"
00009Dr 1               	.dbg	sym, "num", "00", auto, 22
00009Dr 1               	.dbg	sym, "active", "00", auto, 21
00009Dr 1               	.dbg	sym, "sprite_num", "00", auto, 20
00009Dr 1               	.dbg	sym, "mcolor", "00", auto, 19
00009Dr 1               	.dbg	sym, "sprite_ptrs", "00", auto, 17
00009Dr 1               	.dbg	sym, "sprite_ptrs_len", "00", auto, 16
00009Dr 1               	.dbg	sym, "x", "00", auto, 14
00009Dr 1               	.dbg	sym, "expand_x", "00", auto, 13
00009Dr 1               	.dbg	sym, "y", "00", auto, 12
00009Dr 1               	.dbg	sym, "expand_y", "00", auto, 11
00009Dr 1               	.dbg	sym, "xvel", "00", auto, 10
00009Dr 1               	.dbg	sym, "yvel", "00", auto, 9
00009Dr 1               	.dbg	sym, "color", "00", auto, 8
00009Dr 1               	.dbg	sym, "x_counter", "00", auto, 6
00009Dr 1               	.dbg	sym, "y_counter", "00", auto, 4
00009Dr 1               	.dbg	sym, "coll_handler", "00", auto, 2
00009Dr 1               	.dbg	sym, "move_handler", "00", auto, 0
00009Dr 1               	.dbg	sym, "m", "00", auto, -2
00009Dr 1               
00009Dr 1               .segment	"CODE"
00009Dr 1               
00009Dr 1               	.dbg	line, "space-blimp.c", 199
00009Dr 1  20 rr rr     	jsr     pushax
0000A0r 1               	.dbg	line, "space-blimp.c", 200
0000A0r 1  A0 16        	ldy     #$16
0000A2r 1  B1 rr        	lda     (sp),y
0000A4r 1  20 rr rr     	jsr     pusha0
0000A7r 1  A9 18        	lda     #$18
0000A9r 1  20 rr rr     	jsr     tosmula0
0000ACr 1  18           	clc
0000ADr 1  69 rr        	adc     #<(_mobs)
0000AFr 1  A8           	tay
0000B0r 1  8A           	txa
0000B1r 1  69 rr        	adc     #>(_mobs)
0000B3r 1  AA           	tax
0000B4r 1  98           	tya
0000B5r 1  20 rr rr     	jsr     pushax
0000B8r 1               	.dbg	line, "space-blimp.c", 201
0000B8r 1  20 rr rr     	jsr     ldax0sp
0000BBr 1  85 rr        	sta     ptr1
0000BDr 1  86 rr        	stx     ptr1+1
0000BFr 1  A0 17        	ldy     #$17
0000C1r 1  B1 rr        	lda     (sp),y
0000C3r 1  A0 00        	ldy     #$00
0000C5r 1  91 rr        	sta     (ptr1),y
0000C7r 1               	.dbg	line, "space-blimp.c", 202
0000C7r 1  20 rr rr     	jsr     ldax0sp
0000CAr 1  85 rr        	sta     ptr1
0000CCr 1  86 rr        	stx     ptr1+1
0000CEr 1  A0 16        	ldy     #$16
0000D0r 1  B1 rr        	lda     (sp),y
0000D2r 1  A0 01        	ldy     #$01
0000D4r 1  91 rr        	sta     (ptr1),y
0000D6r 1               	.dbg	line, "space-blimp.c", 203
0000D6r 1  20 rr rr     	jsr     ldax0sp
0000D9r 1  85 rr        	sta     ptr1
0000DBr 1  86 rr        	stx     ptr1+1
0000DDr 1  A0 14        	ldy     #$14
0000DFr 1  20 rr rr     	jsr     ldaxysp
0000E2r 1  A0 16        	ldy     #$16
0000E4r 1  91 rr        	sta     (ptr1),y
0000E6r 1  C8           	iny
0000E7r 1  8A           	txa
0000E8r 1  91 rr        	sta     (ptr1),y
0000EAr 1               	.dbg	line, "space-blimp.c", 204
0000EAr 1  20 rr rr     	jsr     ldax0sp
0000EDr 1  85 rr        	sta     ptr1
0000EFr 1  86 rr        	stx     ptr1+1
0000F1r 1  A0 12        	ldy     #$12
0000F3r 1  B1 rr        	lda     (sp),y
0000F5r 1  A0 14        	ldy     #$14
0000F7r 1  91 rr        	sta     (ptr1),y
0000F9r 1               	.dbg	line, "space-blimp.c", 205
0000F9r 1  20 rr rr     	jsr     ldax0sp
0000FCr 1  85 rr        	sta     ptr1
0000FEr 1  86 rr        	stx     ptr1+1
000100r 1  A9 00        	lda     #$00
000102r 1  A0 15        	ldy     #$15
000104r 1  91 rr        	sta     (ptr1),y
000106r 1               	.dbg	line, "space-blimp.c", 206
000106r 1  20 rr rr     	jsr     ldax0sp
000109r 1  85 rr        	sta     ptr1
00010Br 1  86 rr        	stx     ptr1+1
00010Dr 1  A0 11        	ldy     #$11
00010Fr 1  20 rr rr     	jsr     ldaxysp
000112r 1  A0 02        	ldy     #$02
000114r 1  91 rr        	sta     (ptr1),y
000116r 1  C8           	iny
000117r 1  8A           	txa
000118r 1  91 rr        	sta     (ptr1),y
00011Ar 1               	.dbg	line, "space-blimp.c", 207
00011Ar 1  20 rr rr     	jsr     ldax0sp
00011Dr 1  85 rr        	sta     ptr1
00011Fr 1  86 rr        	stx     ptr1+1
000121r 1  A0 0E        	ldy     #$0E
000123r 1  B1 rr        	lda     (sp),y
000125r 1  A0 04        	ldy     #$04
000127r 1  91 rr        	sta     (ptr1),y
000129r 1  C8           	iny
00012Ar 1  A9 00        	lda     #$00
00012Cr 1  91 rr        	sta     (ptr1),y
00012Er 1               	.dbg	line, "space-blimp.c", 208
00012Er 1  20 rr rr     	jsr     ldax0sp
000131r 1  85 rr        	sta     ptr1
000133r 1  86 rr        	stx     ptr1+1
000135r 1  A0 15        	ldy     #$15
000137r 1  B1 rr        	lda     (sp),y
000139r 1  A0 07        	ldy     #$07
00013Br 1  91 rr        	sta     (ptr1),y
00013Dr 1               	.dbg	line, "space-blimp.c", 209
00013Dr 1  20 rr rr     	jsr     ldax0sp
000140r 1  85 rr        	sta     ptr1
000142r 1  86 rr        	stx     ptr1+1
000144r 1  A0 0F        	ldy     #$0F
000146r 1  B1 rr        	lda     (sp),y
000148r 1  A0 08        	ldy     #$08
00014Ar 1  91 rr        	sta     (ptr1),y
00014Cr 1               	.dbg	line, "space-blimp.c", 210
00014Cr 1  20 rr rr     	jsr     ldax0sp
00014Fr 1  85 rr        	sta     ptr1
000151r 1  86 rr        	stx     ptr1+1
000153r 1  A0 0D        	ldy     #$0D
000155r 1  B1 rr        	lda     (sp),y
000157r 1  A0 09        	ldy     #$09
000159r 1  91 rr        	sta     (ptr1),y
00015Br 1               	.dbg	line, "space-blimp.c", 211
00015Br 1  20 rr rr     	jsr     ldax0sp
00015Er 1  85 rr        	sta     ptr1
000160r 1  86 rr        	stx     ptr1+1
000162r 1  A0 0C        	ldy     #$0C
000164r 1  B1 rr        	lda     (sp),y
000166r 1  A0 0A        	ldy     #$0A
000168r 1  91 rr        	sta     (ptr1),y
00016Ar 1               	.dbg	line, "space-blimp.c", 212
00016Ar 1  20 rr rr     	jsr     ldax0sp
00016Dr 1  85 rr        	sta     ptr1
00016Fr 1  86 rr        	stx     ptr1+1
000171r 1  A0 0B        	ldy     #$0B
000173r 1  B1 rr        	lda     (sp),y
000175r 1  91 rr        	sta     (ptr1),y
000177r 1               	.dbg	line, "space-blimp.c", 213
000177r 1  20 rr rr     	jsr     ldax0sp
00017Ar 1  85 rr        	sta     ptr1
00017Cr 1  86 rr        	stx     ptr1+1
00017Er 1  A0 0A        	ldy     #$0A
000180r 1  B1 rr        	lda     (sp),y
000182r 1  A0 06        	ldy     #$06
000184r 1  91 rr        	sta     (ptr1),y
000186r 1               	.dbg	line, "space-blimp.c", 214
000186r 1  20 rr rr     	jsr     ldax0sp
000189r 1  85 rr        	sta     sreg
00018Br 1  86 rr        	stx     sreg+1
00018Dr 1  A0 09        	ldy     #$09
00018Fr 1  20 rr rr     	jsr     ldaxysp
000192r 1  20 rr rr     	jsr     ldaxi
000195r 1  A0 0C        	ldy     #$0C
000197r 1  91 rr        	sta     (sreg),y
000199r 1  C8           	iny
00019Ar 1  8A           	txa
00019Br 1  91 rr        	sta     (sreg),y
00019Dr 1               	.dbg	line, "space-blimp.c", 215
00019Dr 1  20 rr rr     	jsr     ldax0sp
0001A0r 1  85 rr        	sta     sreg
0001A2r 1  86 rr        	stx     sreg+1
0001A4r 1  A0 07        	ldy     #$07
0001A6r 1  20 rr rr     	jsr     ldaxysp
0001A9r 1  20 rr rr     	jsr     ldaxi
0001ACr 1  A0 0E        	ldy     #$0E
0001AEr 1  91 rr        	sta     (sreg),y
0001B0r 1  C8           	iny
0001B1r 1  8A           	txa
0001B2r 1  91 rr        	sta     (sreg),y
0001B4r 1               	.dbg	line, "space-blimp.c", 216
0001B4r 1  20 rr rr     	jsr     ldax0sp
0001B7r 1  85 rr        	sta     ptr1
0001B9r 1  86 rr        	stx     ptr1+1
0001BBr 1  A0 05        	ldy     #$05
0001BDr 1  20 rr rr     	jsr     ldaxysp
0001C0r 1  A0 10        	ldy     #$10
0001C2r 1  91 rr        	sta     (ptr1),y
0001C4r 1  C8           	iny
0001C5r 1  8A           	txa
0001C6r 1  91 rr        	sta     (ptr1),y
0001C8r 1               	.dbg	line, "space-blimp.c", 217
0001C8r 1  20 rr rr     	jsr     ldax0sp
0001CBr 1  85 rr        	sta     ptr1
0001CDr 1  86 rr        	stx     ptr1+1
0001CFr 1  A0 03        	ldy     #$03
0001D1r 1  20 rr rr     	jsr     ldaxysp
0001D4r 1  A0 12        	ldy     #$12
0001D6r 1  91 rr        	sta     (ptr1),y
0001D8r 1  C8           	iny
0001D9r 1  8A           	txa
0001DAr 1  91 rr        	sta     (ptr1),y
0001DCr 1               	.dbg	line, "space-blimp.c", 219
0001DCr 1  20 rr rr     	jsr     ldax0sp
0001DFr 1               	.dbg	line, "space-blimp.c", 220
0001DFr 1  A0 19        	ldy     #$19
0001E1r 1  4C rr rr     	jmp     addysp
0001E4r 1               
0001E4r 1               	.dbg	line
0001E4r 1               .endproc
0001E4r 1               
0001E4r 1               ; ---------------------------------------------------------------
0001E4r 1               ; void __near__ move_mobs (void)
0001E4r 1               ; ---------------------------------------------------------------
0001E4r 1               
0001E4r 1               .segment	"CODE"
0001E4r 1               
0001E4r 1               .proc	_move_mobs: near
0001E4r 1               
0001E4r 1               	.dbg	func, "move_mobs", "00", extern, "_move_mobs"
0001E4r 1               	.dbg	sym, "i", "00", auto, -2
0001E4r 1               
0001E4r 1               .segment	"CODE"
0001E4r 1               
0001E4r 1               	.dbg	line, "space-blimp.c", 161
0001E4r 1  20 rr rr     	jsr     decsp2
0001E7r 1  A2 00        	ldx     #$00
0001E9r 1  8A           	txa
0001EAr 1  20 rr rr     	jsr     stax0sp
0001EDr 1  20 rr rr     L0002:	jsr     ldax0sp
0001F0r 1  C9 08        	cmp     #$08
0001F2r 1  8A           	txa
0001F3r 1  E9 00        	sbc     #$00
0001F5r 1  50 02        	bvc     L0006
0001F7r 1  49 80        	eor     #$80
0001F9r 1  10 36        L0006:	bpl     L0003
0001FBr 1               	.dbg	line, "space-blimp.c", 162
0001FBr 1  20 rr rr     	jsr     pushw0sp
0001FEr 1  A9 18        	lda     #$18
000200r 1  20 rr rr     	jsr     tosmula0
000203r 1  85 rr        	sta     ptr1
000205r 1  8A           	txa
000206r 1  18           	clc
000207r 1  69 rr        	adc     #>(_mobs)
000209r 1  85 rr        	sta     ptr1+1
00020Br 1  A0 rr        	ldy     #<(_mobs)
00020Dr 1  B1 rr        	lda     (ptr1),y
00020Fr 1  C9 01        	cmp     #$01
000211r 1  D0 14        	bne     L0004
000213r 1               	.dbg	line, "space-blimp.c", 163
000213r 1  20 rr rr     	jsr     pushw0sp
000216r 1  A9 18        	lda     #$18
000218r 1  20 rr rr     	jsr     tosmula0
00021Br 1  18           	clc
00021Cr 1  69 rr        	adc     #<(_mobs)
00021Er 1  A8           	tay
00021Fr 1  8A           	txa
000220r 1  69 rr        	adc     #>(_mobs)
000222r 1  AA           	tax
000223r 1  98           	tya
000224r 1  20 rr rr     	jsr     _move_mob
000227r 1               	.dbg	line, "space-blimp.c", 161
000227r 1  A2 00        L0004:	ldx     #$00
000229r 1  A9 01        	lda     #$01
00022Br 1  20 rr rr     	jsr     addeq0sp
00022Er 1  4C rr rr     	jmp     L0002
000231r 1               	.dbg	line, "space-blimp.c", 166
000231r 1  4C rr rr     L0003:	jmp     incsp2
000234r 1               
000234r 1               	.dbg	line
000234r 1               .endproc
000234r 1               
000234r 1               ; ---------------------------------------------------------------
000234r 1               ; void __near__ sprite_switching_bouncy_border_collision_handler (struct MOB *m, enum $anon-enum-0016 type)
000234r 1               ; ---------------------------------------------------------------
000234r 1               
000234r 1               .segment	"CODE"
000234r 1               
000234r 1               .proc	_sprite_switching_bouncy_border_collision_handler: near
000234r 1               
000234r 1               	.dbg	func, "sprite_switching_bouncy_border_collision_handler", "00", extern, "_sprite_switching_bouncy_border_collision_handler"
000234r 1               	.dbg	sym, "m", "00", auto, 1
000234r 1               	.dbg	sym, "type", "00", auto, 0
000234r 1               
000234r 1               .segment	"CODE"
000234r 1               
000234r 1               	.dbg	line, "space-blimp.c", 356
000234r 1  20 rr rr     	jsr     pusha
000237r 1               	.dbg	line, "space-blimp.c", 357
000237r 1  A0 01        	ldy     #$01
000239r 1  B1 rr        	lda     (sp),y
00023Br 1  C8           	iny
00023Cr 1  11 rr        	ora     (sp),y
00023Er 1  F0 06        	beq     L0006
000240r 1  A0 00        	ldy     #$00
000242r 1  B1 rr        	lda     (sp),y
000244r 1  D0 0E        	bne     L0007
000246r 1  A9 rr        L0006:	lda     #<(S0012)
000248r 1  A2 rr        	ldx     #>(S0012)
00024Ar 1  20 rr rr     	jsr     pushax
00024Dr 1  A2 01        	ldx     #$01
00024Fr 1  A9 65        	lda     #$65
000251r 1  20 rr rr     	jsr     __afailed
000254r 1               	.dbg	line, "space-blimp.c", 359
000254r 1  A0 04        L0007:	ldy     #$04
000256r 1  20 rr rr     	jsr     pushwysp
000259r 1  A0 02        	ldy     #$02
00025Br 1  B1 rr        	lda     (sp),y
00025Dr 1  20 rr rr     	jsr     _bouncy_border_collision_handler
000260r 1               	.dbg	line, "space-blimp.c", 360
000260r 1  A0 00        	ldy     #$00
000262r 1  B1 rr        	lda     (sp),y
000264r 1  C9 03        	cmp     #$03
000266r 1  D0 0B        	bne     L000D
000268r 1               	.dbg	line, "space-blimp.c", 361
000268r 1  A0 02        	ldy     #$02
00026Ar 1  20 rr rr     	jsr     ldaxysp
00026Dr 1  20 rr rr     	jsr     _prev_sprite_ptr
000270r 1               	.dbg	line, "space-blimp.c", 363
000270r 1  4C rr rr     	jmp     L000A
000273r 1  B1 rr        L000D:	lda     (sp),y
000275r 1  C9 01        	cmp     #$01
000277r 1  D0 08        	bne     L000A
000279r 1               	.dbg	line, "space-blimp.c", 364
000279r 1  A0 02        	ldy     #$02
00027Br 1  20 rr rr     	jsr     ldaxysp
00027Er 1  20 rr rr     	jsr     _next_sprite_ptr
000281r 1               	.dbg	line, "space-blimp.c", 366
000281r 1  4C rr rr     L000A:	jmp     incsp3
000284r 1               
000284r 1               	.dbg	line
000284r 1               .endproc
000284r 1               
000284r 1               ; ---------------------------------------------------------------
000284r 1               ; void __near__ bouncy_border_collision_handler (struct MOB *m, enum $anon-enum-0016 type)
000284r 1               ; ---------------------------------------------------------------
000284r 1               
000284r 1               .segment	"CODE"
000284r 1               
000284r 1               .proc	_bouncy_border_collision_handler: near
000284r 1               
000284r 1               	.dbg	func, "bouncy_border_collision_handler", "00", extern, "_bouncy_border_collision_handler"
000284r 1               	.dbg	sym, "m", "00", auto, 1
000284r 1               	.dbg	sym, "type", "00", auto, 0
000284r 1               
000284r 1               .segment	"CODE"
000284r 1               
000284r 1               	.dbg	line, "space-blimp.c", 292
000284r 1  20 rr rr     	jsr     pusha
000287r 1               	.dbg	line, "space-blimp.c", 293
000287r 1  A0 01        	ldy     #$01
000289r 1  B1 rr        	lda     (sp),y
00028Br 1  C8           	iny
00028Cr 1  11 rr        	ora     (sp),y
00028Er 1  D0 0E        	bne     L0004
000290r 1  A9 rr        	lda     #<(S000F)
000292r 1  A2 rr        	ldx     #>(S000F)
000294r 1  20 rr rr     	jsr     pushax
000297r 1  A2 01        	ldx     #$01
000299r 1  A9 25        	lda     #$25
00029Br 1  20 rr rr     	jsr     __afailed
00029Er 1               	.dbg	line, "space-blimp.c", 296
00029Er 1  A0 00        L0004:	ldy     #$00
0002A0r 1  B1 rr        	lda     (sp),y
0002A2r 1               	.dbg	line, "space-blimp.c", 317
0002A2r 1  C9 01        	cmp     #$01
0002A4r 1  F0 30        	beq     L0008
0002A6r 1  C9 02        	cmp     #$02
0002A8r 1  F0 4D        	beq     L0009
0002AAr 1  C9 03        	cmp     #$03
0002ACr 1  F0 07        	beq     L0007
0002AEr 1  C9 04        	cmp     #$04
0002B0r 1  F0 52        	beq     L000A
0002B2r 1  4C rr rr     	jmp     L0006
0002B5r 1               	.dbg	line, "space-blimp.c", 298
0002B5r 1  A0 02        L0007:	ldy     #$02
0002B7r 1  20 rr rr     	jsr     ldaxysp
0002BAr 1  85 rr        	sta     ptr1
0002BCr 1  86 rr        	stx     ptr1+1
0002BEr 1  A9 13        	lda     #$13
0002C0r 1  A0 02        	ldy     #$02
0002C2r 1  91 rr        	sta     (ptr1),y
0002C4r 1  C8           	iny
0002C5r 1  A9 00        	lda     #$00
0002C7r 1  91 rr        	sta     (ptr1),y
0002C9r 1               	.dbg	line, "space-blimp.c", 299
0002C9r 1  88           	dey
0002CAr 1  20 rr rr     	jsr     ldaxysp
0002CDr 1  85 rr        	sta     sreg
0002CFr 1  86 rr        	stx     sreg+1
0002D1r 1  A0 0A        	ldy     #$0A
0002D3r 1               	.dbg	line, "space-blimp.c", 300
0002D3r 1  4C rr rr     	jmp     L000F
0002D6r 1               	.dbg	line, "space-blimp.c", 303
0002D6r 1  A0 02        L0008:	ldy     #$02
0002D8r 1  20 rr rr     	jsr     ldaxysp
0002DBr 1  85 rr        	sta     ptr1
0002DDr 1  86 rr        	stx     ptr1+1
0002DFr 1  A9 3E        	lda     #$3E
0002E1r 1  A0 02        	ldy     #$02
0002E3r 1  91 rr        	sta     (ptr1),y
0002E5r 1  C8           	iny
0002E6r 1  A9 01        	lda     #$01
0002E8r 1  91 rr        	sta     (ptr1),y
0002EAr 1               	.dbg	line, "space-blimp.c", 304
0002EAr 1  88           	dey
0002EBr 1  20 rr rr     	jsr     ldaxysp
0002EEr 1  85 rr        	sta     sreg
0002F0r 1  86 rr        	stx     sreg+1
0002F2r 1  A0 0A        	ldy     #$0A
0002F4r 1               	.dbg	line, "space-blimp.c", 305
0002F4r 1  4C rr rr     	jmp     L000F
0002F7r 1               	.dbg	line, "space-blimp.c", 308
0002F7r 1  A8           L0009:	tay
0002F8r 1  20 rr rr     	jsr     ldaxysp
0002FBr 1  85 rr        	sta     ptr1
0002FDr 1  86 rr        	stx     ptr1+1
0002FFr 1  A9 32        	lda     #$32
000301r 1               	.dbg	line, "space-blimp.c", 310
000301r 1  4C rr rr     	jmp     L0019
000304r 1               	.dbg	line, "space-blimp.c", 313
000304r 1  A0 02        L000A:	ldy     #$02
000306r 1  20 rr rr     	jsr     ldaxysp
000309r 1  85 rr        	sta     ptr1
00030Br 1  86 rr        	stx     ptr1+1
00030Dr 1  A9 E5        	lda     #$E5
00030Fr 1  A0 04        L0019:	ldy     #$04
000311r 1  91 rr        	sta     (ptr1),y
000313r 1  C8           	iny
000314r 1  A9 00        	lda     #$00
000316r 1  91 rr        	sta     (ptr1),y
000318r 1               	.dbg	line, "space-blimp.c", 314
000318r 1  A0 02        	ldy     #$02
00031Ar 1  20 rr rr     	jsr     ldaxysp
00031Dr 1  85 rr        	sta     sreg
00031Fr 1  86 rr        	stx     sreg+1
000321r 1  A0 0B        	ldy     #$0B
000323r 1  20 rr rr     L000F:	jsr     ldaidx
000326r 1  49 FF        	eor     #$FF
000328r 1  18           	clc
000329r 1  69 01        	adc     #$01
00032Br 1  91 rr        	sta     (sreg),y
00032Dr 1               	.dbg	line, "space-blimp.c", 318
00032Dr 1  4C rr rr     L0006:	jmp     incsp3
000330r 1               
000330r 1               	.dbg	line
000330r 1               .endproc
000330r 1               
000330r 1               ; ---------------------------------------------------------------
000330r 1               ; void __near__ velocity_movement_handler (struct MOB *m)
000330r 1               ; ---------------------------------------------------------------
000330r 1               
000330r 1               .segment	"CODE"
000330r 1               
000330r 1               .proc	_velocity_movement_handler: near
000330r 1               
000330r 1               	.dbg	func, "velocity_movement_handler", "00", extern, "_velocity_movement_handler"
000330r 1               	.dbg	sym, "m", "00", auto, 0
000330r 1               	.dbg	sym, "ct", "00", auto, -1
000330r 1               
000330r 1               .segment	"CODE"
000330r 1               
000330r 1               	.dbg	line, "space-blimp.c", 320
000330r 1  20 rr rr     	jsr     pushax
000333r 1               	.dbg	line, "space-blimp.c", 321
000333r 1  A9 00        	lda     #$00
000335r 1  20 rr rr     	jsr     pusha
000338r 1               	.dbg	line, "space-blimp.c", 323
000338r 1  A0 01        	ldy     #$01
00033Ar 1  B1 rr        	lda     (sp),y
00033Cr 1  C8           	iny
00033Dr 1  11 rr        	ora     (sp),y
00033Fr 1  D0 10        	bne     L0017
000341r 1  A9 rr        	lda     #<(S0010)
000343r 1  A2 rr        	ldx     #>(S0010)
000345r 1  20 rr rr     	jsr     pushax
000348r 1  A2 01        	ldx     #$01
00034Ar 1  A9 43        	lda     #$43
00034Cr 1  20 rr rr     	jsr     __afailed
00034Fr 1               	.dbg	line, "space-blimp.c", 328
00034Fr 1  A0 02        	ldy     #$02
000351r 1  20 rr rr     L0017:	jsr     ldaxysp
000354r 1  20 rr rr     	jsr     pushax
000357r 1  85 rr        	sta     ptr1
000359r 1  86 rr        	stx     ptr1+1
00035Br 1  A0 0C        	ldy     #$0C
00035Dr 1  B1 rr        	lda     (ptr1),y
00035Fr 1  48           	pha
000360r 1  38           	sec
000361r 1  E9 01        	sbc     #$01
000363r 1  20 rr rr     	jsr     staspidx
000366r 1  68           	pla
000367r 1  D0 68        	bne     L0005
000369r 1               	.dbg	line, "space-blimp.c", 329
000369r 1  A0 02        	ldy     #$02
00036Br 1  20 rr rr     	jsr     ldaxysp
00036Er 1  20 rr rr     	jsr     pushax
000371r 1  A0 03        	ldy     #$03
000373r 1  20 rr rr     	jsr     pushwidx
000376r 1  A0 06        	ldy     #$06
000378r 1  20 rr rr     	jsr     ldaxysp
00037Br 1  A0 0A        	ldy     #$0A
00037Dr 1  20 rr rr     	jsr     ldaidx
000380r 1  20 rr rr     	jsr     tosaddax
000383r 1  A0 02        	ldy     #$02
000385r 1  20 rr rr     	jsr     staxspidx
000388r 1               	.dbg	line, "space-blimp.c", 330
000388r 1  20 rr rr     	jsr     ldaxysp
00038Br 1  A0 03        	ldy     #$03
00038Dr 1  20 rr rr     	jsr     ldaxidx
000390r 1  C9 12        	cmp     #$12
000392r 1  8A           	txa
000393r 1  E9 00        	sbc     #$00
000395r 1  50 02        	bvc     L0007
000397r 1  49 80        	eor     #$80
000399r 1  10 05        L0007:	bpl     L0006
00039Br 1               	.dbg	line, "space-blimp.c", 331
00039Br 1  A9 03        	lda     #$03
00039Dr 1               	.dbg	line, "space-blimp.c", 333
00039Dr 1  4C rr rr     	jmp     L0018
0003A0r 1  A0 02        L0006:	ldy     #$02
0003A2r 1  20 rr rr     	jsr     ldaxysp
0003A5r 1  A0 03        	ldy     #$03
0003A7r 1  20 rr rr     	jsr     ldaxidx
0003AAr 1  C9 3F        	cmp     #$3F
0003ACr 1  8A           	txa
0003ADr 1  E9 01        	sbc     #$01
0003AFr 1  70 02        	bvs     L000A
0003B1r 1  49 80        	eor     #$80
0003B3r 1  10 06        L000A:	bpl     L0009
0003B5r 1               	.dbg	line, "space-blimp.c", 334
0003B5r 1  A9 01        	lda     #$01
0003B7r 1  A0 00        L0018:	ldy     #$00
0003B9r 1  91 rr        	sta     (sp),y
0003BBr 1               	.dbg	line, "space-blimp.c", 336
0003BBr 1  A0 04        L0009:	ldy     #$04
0003BDr 1  20 rr rr     	jsr     pushwysp
0003C0r 1  A0 04        	ldy     #$04
0003C2r 1  20 rr rr     	jsr     ldaxysp
0003C5r 1  85 rr        	sta     ptr1
0003C7r 1  86 rr        	stx     ptr1+1
0003C9r 1  A0 0D        	ldy     #$0D
0003CBr 1  B1 rr        	lda     (ptr1),y
0003CDr 1  88           	dey
0003CEr 1  20 rr rr     	jsr     staspidx
0003D1r 1               	.dbg	line, "space-blimp.c", 338
0003D1r 1  A0 02        L0005:	ldy     #$02
0003D3r 1  20 rr rr     	jsr     ldaxysp
0003D6r 1  20 rr rr     	jsr     pushax
0003D9r 1  85 rr        	sta     ptr1
0003DBr 1  86 rr        	stx     ptr1+1
0003DDr 1  A0 0E        	ldy     #$0E
0003DFr 1  B1 rr        	lda     (ptr1),y
0003E1r 1  48           	pha
0003E2r 1  38           	sec
0003E3r 1  E9 01        	sbc     #$01
0003E5r 1  20 rr rr     	jsr     staspidx
0003E8r 1  68           	pla
0003E9r 1  D0 6A        	bne     L000B
0003EBr 1               	.dbg	line, "space-blimp.c", 339
0003EBr 1  A0 02        	ldy     #$02
0003EDr 1  20 rr rr     	jsr     ldaxysp
0003F0r 1  20 rr rr     	jsr     pushax
0003F3r 1  A0 05        	ldy     #$05
0003F5r 1  20 rr rr     	jsr     pushwidx
0003F8r 1  A0 06        	ldy     #$06
0003FAr 1  20 rr rr     	jsr     ldaxysp
0003FDr 1  A0 0B        	ldy     #$0B
0003FFr 1  20 rr rr     	jsr     ldaidx
000402r 1  20 rr rr     	jsr     tosaddax
000405r 1  A0 04        	ldy     #$04
000407r 1  20 rr rr     	jsr     staxspidx
00040Ar 1               	.dbg	line, "space-blimp.c", 340
00040Ar 1  A0 02        	ldy     #$02
00040Cr 1  20 rr rr     	jsr     ldaxysp
00040Fr 1  A0 05        	ldy     #$05
000411r 1  20 rr rr     	jsr     ldaxidx
000414r 1  C9 31        	cmp     #$31
000416r 1  8A           	txa
000417r 1  E9 00        	sbc     #$00
000419r 1  50 02        	bvc     L000D
00041Br 1  49 80        	eor     #$80
00041Dr 1  10 05        L000D:	bpl     L000C
00041Fr 1               	.dbg	line, "space-blimp.c", 341
00041Fr 1  A9 02        	lda     #$02
000421r 1               	.dbg	line, "space-blimp.c", 343
000421r 1  4C rr rr     	jmp     L0019
000424r 1  A0 02        L000C:	ldy     #$02
000426r 1  20 rr rr     	jsr     ldaxysp
000429r 1  A0 05        	ldy     #$05
00042Br 1  20 rr rr     	jsr     ldaxidx
00042Er 1  C9 E6        	cmp     #$E6
000430r 1  8A           	txa
000431r 1  E9 00        	sbc     #$00
000433r 1  70 02        	bvs     L0010
000435r 1  49 80        	eor     #$80
000437r 1  10 06        L0010:	bpl     L000F
000439r 1               	.dbg	line, "space-blimp.c", 344
000439r 1  A9 04        	lda     #$04
00043Br 1  A0 00        L0019:	ldy     #$00
00043Dr 1  91 rr        	sta     (sp),y
00043Fr 1               	.dbg	line, "space-blimp.c", 346
00043Fr 1  A0 04        L000F:	ldy     #$04
000441r 1  20 rr rr     	jsr     pushwysp
000444r 1  A0 04        	ldy     #$04
000446r 1  20 rr rr     	jsr     ldaxysp
000449r 1  85 rr        	sta     ptr1
00044Br 1  86 rr        	stx     ptr1+1
00044Dr 1  A0 0F        	ldy     #$0F
00044Fr 1  B1 rr        	lda     (ptr1),y
000451r 1  88           	dey
000452r 1  20 rr rr     	jsr     staspidx
000455r 1               	.dbg	line, "space-blimp.c", 350
000455r 1  A0 02        L000B:	ldy     #$02
000457r 1  20 rr rr     	jsr     ldaxysp
00045Ar 1  A0 11        	ldy     #$11
00045Cr 1  20 rr rr     	jsr     ldaxidx
00045Fr 1  E0 00        	cpx     #$00
000461r 1  D0 12        	bne     L0013
000463r 1  C9 00        	cmp     #$00
000465r 1  D0 0E        	bne     L0013
000467r 1  A9 rr        	lda     #<(S0011)
000469r 1  A2 rr        	ldx     #>(S0011)
00046Br 1  20 rr rr     	jsr     pushax
00046Er 1  A2 01        	ldx     #$01
000470r 1  A9 5E        	lda     #$5E
000472r 1  20 rr rr     	jsr     __afailed
000475r 1               	.dbg	line, "space-blimp.c", 351
000475r 1  A0 00        L0013:	ldy     #$00
000477r 1  B1 rr        	lda     (sp),y
000479r 1  F0 2A        	beq     L0014
00047Br 1               	.dbg	line, "space-blimp.c", 352
00047Br 1  A0 02        	ldy     #$02
00047Dr 1  20 rr rr     	jsr     ldaxysp
000480r 1  A0 11        	ldy     #$11
000482r 1  20 rr rr     	jsr     pushwidx
000485r 1  A0 06        	ldy     #$06
000487r 1  20 rr rr     	jsr     pushwysp
00048Ar 1  A0 04        	ldy     #$04
00048Cr 1  A2 00        	ldx     #$00
00048Er 1  B1 rr        	lda     (sp),y
000490r 1  48           	pha
000491r 1  A0 02        	ldy     #$02
000493r 1  B1 rr        	lda     (sp),y
000495r 1  8D rr rr     	sta     jmpvec+1
000498r 1  C8           	iny
000499r 1  B1 rr        	lda     (sp),y
00049Br 1  8D rr rr     	sta     jmpvec+2
00049Er 1  68           	pla
00049Fr 1  20 rr rr     	jsr     jmpvec
0004A2r 1  20 rr rr     	jsr     incsp2
0004A5r 1               	.dbg	line, "space-blimp.c", 354
0004A5r 1  4C rr rr     L0014:	jmp     incsp3
0004A8r 1               
0004A8r 1               	.dbg	line
0004A8r 1               .endproc
0004A8r 1               
0004A8r 1               ; ---------------------------------------------------------------
0004A8r 1               ; int __near__ load_sprites (char *fn, unsigned char dev)
0004A8r 1               ; ---------------------------------------------------------------
0004A8r 1               
0004A8r 1               .segment	"CODE"
0004A8r 1               
0004A8r 1               .proc	_load_sprites: near
0004A8r 1               
0004A8r 1               	.dbg	func, "load_sprites", "00", extern, "_load_sprites"
0004A8r 1               	.dbg	sym, "fn", "00", auto, 1
0004A8r 1               	.dbg	sym, "dev", "00", auto, 0
0004A8r 1               	.dbg	sym, "flen", "00", auto, -1
0004A8r 1               	.dbg	sym, "ret_code", "00", auto, -2
0004A8r 1               
0004A8r 1               .segment	"CODE"
0004A8r 1               
0004A8r 1               	.dbg	line, "space-blimp.c", 148
0004A8r 1  20 rr rr     	jsr     pusha
0004ABr 1               	.dbg	line, "space-blimp.c", 151
0004ABr 1  20 rr rr     	jsr     decsp2
0004AEr 1  A0 04        	ldy     #$04
0004B0r 1  20 rr rr     	jsr     ldaxysp
0004B3r 1  20 rr rr     	jsr     _strlen
0004B6r 1  A0 01        	ldy     #$01
0004B8r 1  91 rr        	sta     (sp),y
0004BAr 1               	.dbg	line, "space-blimp.c", 152
0004BAr 1  A0 06        	ldy     #$06
0004BCr 1  20 rr rr     	jsr     pushwysp
0004BFr 1  A0 03        	ldy     #$03
0004C1r 1  B1 rr        	lda     (sp),y
0004C3r 1  20 rr rr     	jsr     pusha
0004C6r 1  A0 05        	ldy     #$05
0004C8r 1  B1 rr        	lda     (sp),y
0004CAr 1  20 rr rr     	jsr     pusha
0004CDr 1  A2 30        	ldx     #$30
0004CFr 1  A9 00        	lda     #$00
0004D1r 1  20 rr rr     	jsr     _loadbin
0004D4r 1  A0 00        	ldy     #$00
0004D6r 1  91 rr        	sta     (sp),y
0004D8r 1               	.dbg	line, "space-blimp.c", 155
0004D8r 1  A2 00        	ldx     #$00
0004DAr 1  B1 rr        	lda     (sp),y
0004DCr 1               	.dbg	line, "space-blimp.c", 156
0004DCr 1  4C rr rr     	jmp     incsp5
0004DFr 1               
0004DFr 1               	.dbg	line
0004DFr 1               .endproc
0004DFr 1               
0004DFr 1               ; ---------------------------------------------------------------
0004DFr 1               ; void __near__ init_mobs (void)
0004DFr 1               ; ---------------------------------------------------------------
0004DFr 1               
0004DFr 1               .segment	"CODE"
0004DFr 1               
0004DFr 1               .proc	_init_mobs: near
0004DFr 1               
0004DFr 1               	.dbg	func, "init_mobs", "00", extern, "_init_mobs"
0004DFr 1               
0004DFr 1               .segment	"CODE"
0004DFr 1               
0004DFr 1               	.dbg	line, "space-blimp.c", 183
0004DFr 1  A9 00        	lda     #$00
0004E1r 1  20 rr rr     	jsr     pusha
0004E4r 1  A9 01        	lda     #$01
0004E6r 1  20 rr rr     	jsr     pusha
0004E9r 1  A9 00        	lda     #$00
0004EBr 1  20 rr rr     	jsr     pusha
0004EEr 1  A9 01        	lda     #$01
0004F0r 1  20 rr rr     	jsr     pusha
0004F3r 1  A9 rr        	lda     #<(_blimp_ptrs)
0004F5r 1  A2 rr        	ldx     #>(_blimp_ptrs)
0004F7r 1  20 rr rr     	jsr     pushax
0004FAr 1  AD rr rr     	lda     _blimp_ptr_len
0004FDr 1  20 rr rr     	jsr     pusha
000500r 1               	.dbg	line, "space-blimp.c", 184
000500r 1  A9 10        	lda     #$10
000502r 1  20 rr rr     	jsr     pusha0
000505r 1  A9 00        	lda     #$00
000507r 1  20 rr rr     	jsr     pusha
00050Ar 1  A9 32        	lda     #$32
00050Cr 1  20 rr rr     	jsr     pusha
00050Fr 1  A9 00        	lda     #$00
000511r 1  20 rr rr     	jsr     pusha
000514r 1  A9 02        	lda     #$02
000516r 1  20 rr rr     	jsr     pusha
000519r 1  A9 00        	lda     #$00
00051Br 1  20 rr rr     	jsr     pusha
00051Er 1  A9 0B        	lda     #$0B
000520r 1  20 rr rr     	jsr     pusha
000523r 1               	.dbg	line, "space-blimp.c", 185
000523r 1  A9 rr        	lda     #<(_x_counter)
000525r 1  A2 rr        	ldx     #>(_x_counter)
000527r 1  20 rr rr     	jsr     pushax
00052Ar 1  A9 rr        	lda     #<(_y_counter)
00052Cr 1  A2 rr        	ldx     #>(_y_counter)
00052Er 1  20 rr rr     	jsr     pushax
000531r 1               	.dbg	line, "space-blimp.c", 186
000531r 1  A9 rr        	lda     #<(_sprite_switching_bouncy_border_collision_handler)
000533r 1  A2 rr        	ldx     #>(_sprite_switching_bouncy_border_collision_handler)
000535r 1  20 rr rr     	jsr     pushax
000538r 1  A9 rr        	lda     #<(_velocity_movement_handler)
00053Ar 1  A2 rr        	ldx     #>(_velocity_movement_handler)
00053Cr 1  20 rr rr     	jsr     _init_MOB
00053Fr 1               	.dbg	line, "space-blimp.c", 188
00053Fr 1  A9 01        	lda     #$01
000541r 1  20 rr rr     	jsr     pusha
000544r 1  20 rr rr     	jsr     pusha
000547r 1  20 rr rr     	jsr     pusha
00054Ar 1  20 rr rr     	jsr     pusha
00054Dr 1  A9 rr        	lda     #<(_bomb_ptrs)
00054Fr 1  A2 rr        	ldx     #>(_bomb_ptrs)
000551r 1  20 rr rr     	jsr     pushax
000554r 1  AD rr rr     	lda     _bomb_ptr_len
000557r 1  20 rr rr     	jsr     pusha
00055Ar 1               	.dbg	line, "space-blimp.c", 189
00055Ar 1  A9 10        	lda     #$10
00055Cr 1  20 rr rr     	jsr     pusha0
00055Fr 1  A9 00        	lda     #$00
000561r 1  20 rr rr     	jsr     pusha
000564r 1  A9 32        	lda     #$32
000566r 1  20 rr rr     	jsr     pusha
000569r 1  A9 00        	lda     #$00
00056Br 1  20 rr rr     	jsr     pusha
00056Er 1  A9 02        	lda     #$02
000570r 1  20 rr rr     	jsr     pusha
000573r 1  A9 00        	lda     #$00
000575r 1  20 rr rr     	jsr     pusha
000578r 1  A9 0B        	lda     #$0B
00057Ar 1  20 rr rr     	jsr     pusha
00057Dr 1               	.dbg	line, "space-blimp.c", 190
00057Dr 1  A9 rr        	lda     #<(_x_counter)
00057Fr 1  A2 rr        	ldx     #>(_x_counter)
000581r 1  20 rr rr     	jsr     pushax
000584r 1  A9 rr        	lda     #<(_y_counter)
000586r 1  A2 rr        	ldx     #>(_y_counter)
000588r 1  20 rr rr     	jsr     pushax
00058Br 1               	.dbg	line, "space-blimp.c", 191
00058Br 1  A9 rr        	lda     #<(_sprite_switching_bouncy_border_collision_handler)
00058Dr 1  A2 rr        	ldx     #>(_sprite_switching_bouncy_border_collision_handler)
00058Fr 1  20 rr rr     	jsr     pushax
000592r 1  A9 rr        	lda     #<(_velocity_movement_handler)
000594r 1  A2 rr        	ldx     #>(_velocity_movement_handler)
000596r 1  4C rr rr     	jmp     _init_MOB
000599r 1               
000599r 1               	.dbg	line
000599r 1               .endproc
000599r 1               
000599r 1               ; ---------------------------------------------------------------
000599r 1               ; void __near__ set_bit (unsigned char *val, unsigned char bit_num, unsigned char bit_val)
000599r 1               ; ---------------------------------------------------------------
000599r 1               
000599r 1               .segment	"CODE"
000599r 1               
000599r 1               .proc	_set_bit: near
000599r 1               
000599r 1               	.dbg	func, "set_bit", "00", extern, "_set_bit"
000599r 1               	.dbg	sym, "val", "00", auto, 2
000599r 1               	.dbg	sym, "bit_num", "00", auto, 1
000599r 1               	.dbg	sym, "bit_val", "00", auto, 0
000599r 1               	.dbg	sym, "pwr2", "00", auto, -1
000599r 1               
000599r 1               .segment	"CODE"
000599r 1               
000599r 1               	.dbg	line, "space-blimp.c", 224
000599r 1  20 rr rr     	jsr     pusha
00059Cr 1               	.dbg	line, "space-blimp.c", 225
00059Cr 1  A0 01        	ldy     #$01
00059Er 1  B1 rr        	lda     (sp),y
0005A0r 1  A8           	tay
0005A1r 1  B9 rr rr     	lda     _pow2,y
0005A4r 1  20 rr rr     	jsr     pusha
0005A7r 1               	.dbg	line, "space-blimp.c", 227
0005A7r 1  A0 02        	ldy     #$02
0005A9r 1  B1 rr        	lda     (sp),y
0005ABr 1  C9 09        	cmp     #$09
0005ADr 1  90 0E        	bcc     L0004
0005AFr 1  A9 rr        	lda     #<(S0007)
0005B1r 1  A2 rr        	ldx     #>(S0007)
0005B3r 1  20 rr rr     	jsr     pushax
0005B6r 1  A2 00        	ldx     #$00
0005B8r 1  A9 E3        	lda     #$E3
0005BAr 1  20 rr rr     	jsr     __afailed
0005BDr 1               	.dbg	line, "space-blimp.c", 229
0005BDr 1  A0 01        L0004:	ldy     #$01
0005BFr 1  B1 rr        	lda     (sp),y
0005C1r 1  F0 1A        	beq     L0005
0005C3r 1               	.dbg	line, "space-blimp.c", 230
0005C3r 1  A0 04        	ldy     #$04
0005C5r 1  20 rr rr     	jsr     ldaxysp
0005C8r 1  85 rr        	sta     sreg
0005CAr 1  86 rr        	stx     sreg+1
0005CCr 1  85 rr        	sta     ptr1
0005CEr 1  86 rr        	stx     ptr1+1
0005D0r 1  A0 00        	ldy     #$00
0005D2r 1  B1 rr        	lda     (ptr1),y
0005D4r 1  85 rr        	sta     ptr1
0005D6r 1  B1 rr        	lda     (sp),y
0005D8r 1  05 rr        	ora     ptr1
0005DAr 1               	.dbg	line, "space-blimp.c", 232
0005DAr 1  4C rr rr     	jmp     L0009
0005DDr 1               	.dbg	line, "space-blimp.c", 233
0005DDr 1  A0 04        L0005:	ldy     #$04
0005DFr 1  20 rr rr     	jsr     ldaxysp
0005E2r 1  85 rr        	sta     sreg
0005E4r 1  86 rr        	stx     sreg+1
0005E6r 1  85 rr        	sta     ptr1
0005E8r 1  86 rr        	stx     ptr1+1
0005EAr 1  A0 00        	ldy     #$00
0005ECr 1  B1 rr        	lda     (ptr1),y
0005EEr 1  85 rr        	sta     ptr1
0005F0r 1  A9 FF        	lda     #$FF
0005F2r 1  38           	sec
0005F3r 1  F1 rr        	sbc     (sp),y
0005F5r 1  25 rr        	and     ptr1
0005F7r 1  91 rr        L0009:	sta     (sreg),y
0005F9r 1               	.dbg	line, "space-blimp.c", 235
0005F9r 1  4C rr rr     	jmp     incsp5
0005FCr 1               
0005FCr 1               	.dbg	line
0005FCr 1               .endproc
0005FCr 1               
0005FCr 1               ; ---------------------------------------------------------------
0005FCr 1               ; void __near__ move_mob (struct MOB *m)
0005FCr 1               ; ---------------------------------------------------------------
0005FCr 1               
0005FCr 1               .segment	"CODE"
0005FCr 1               
0005FCr 1               .proc	_move_mob: near
0005FCr 1               
0005FCr 1               	.dbg	func, "move_mob", "00", extern, "_move_mob"
0005FCr 1               	.dbg	sym, "m", "00", auto, 0
0005FCr 1               
0005FCr 1               .segment	"CODE"
0005FCr 1               
0005FCr 1               	.dbg	line, "space-blimp.c", 168
0005FCr 1  20 rr rr     	jsr     pushax
0005FFr 1               	.dbg	line, "space-blimp.c", 169
0005FFr 1  20 rr rr     	jsr     ldax0sp
000602r 1  A0 13        	ldy     #$13
000604r 1  20 rr rr     	jsr     pushwidx
000607r 1  A0 03        	ldy     #$03
000609r 1  20 rr rr     	jsr     ldaxysp
00060Cr 1  48           	pha
00060Dr 1  A0 00        	ldy     #$00
00060Fr 1  B1 rr        	lda     (sp),y
000611r 1  8D rr rr     	sta     jmpvec+1
000614r 1  C8           	iny
000615r 1  B1 rr        	lda     (sp),y
000617r 1  8D rr rr     	sta     jmpvec+2
00061Ar 1  68           	pla
00061Br 1  20 rr rr     	jsr     jmpvec
00061Er 1  20 rr rr     	jsr     incsp2
000621r 1               	.dbg	line, "space-blimp.c", 170
000621r 1  4C rr rr     	jmp     incsp2
000624r 1               
000624r 1               	.dbg	line
000624r 1               .endproc
000624r 1               
000624r 1               ; ---------------------------------------------------------------
000624r 1               ; void __near__ draw_mobs (void)
000624r 1               ; ---------------------------------------------------------------
000624r 1               
000624r 1               .segment	"CODE"
000624r 1               
000624r 1               .proc	_draw_mobs: near
000624r 1               
000624r 1               	.dbg	func, "draw_mobs", "00", extern, "_draw_mobs"
000624r 1               	.dbg	sym, "i", "00", auto, -1
000624r 1               
000624r 1               .segment	"CODE"
000624r 1               
000624r 1               	.dbg	line, "space-blimp.c", 239
000624r 1  20 rr rr     	jsr     decsp1
000627r 1  A9 00        	lda     #$00
000629r 1  A8           	tay
00062Ar 1  91 rr        L0006:	sta     (sp),y
00062Cr 1  C9 02        	cmp     #$02
00062Er 1  B0 29        	bcs     L0003
000630r 1               	.dbg	line, "space-blimp.c", 240
000630r 1  B1 rr        	lda     (sp),y
000632r 1  20 rr rr     	jsr     pusha0
000635r 1  A9 18        	lda     #$18
000637r 1  20 rr rr     	jsr     tosmula0
00063Ar 1  18           	clc
00063Br 1  69 rr        	adc     #<(_mobs)
00063Dr 1  A8           	tay
00063Er 1  8A           	txa
00063Fr 1  69 rr        	adc     #>(_mobs)
000641r 1  AA           	tax
000642r 1  98           	tya
000643r 1  20 rr rr     	jsr     pushax
000646r 1               	.dbg	line, "space-blimp.c", 241
000646r 1  20 rr rr     	jsr     ldax0sp
000649r 1  20 rr rr     	jsr     _draw_mob
00064Cr 1               	.dbg	line, "space-blimp.c", 242
00064Cr 1  20 rr rr     	jsr     incsp2
00064Fr 1               	.dbg	line, "space-blimp.c", 239
00064Fr 1  A0 00        	ldy     #$00
000651r 1  18           	clc
000652r 1  A9 01        	lda     #$01
000654r 1  71 rr        	adc     (sp),y
000656r 1  4C rr rr     	jmp     L0006
000659r 1               	.dbg	line, "space-blimp.c", 243
000659r 1  4C rr rr     L0003:	jmp     incsp1
00065Cr 1               
00065Cr 1               	.dbg	line
00065Cr 1               .endproc
00065Cr 1               
00065Cr 1               ; ---------------------------------------------------------------
00065Cr 1               ; void __near__ dump_mob (struct MOB *m)
00065Cr 1               ; ---------------------------------------------------------------
00065Cr 1               
00065Cr 1               .segment	"CODE"
00065Cr 1               
00065Cr 1               .proc	_dump_mob: near
00065Cr 1               
00065Cr 1               	.dbg	func, "dump_mob", "00", extern, "_dump_mob"
00065Cr 1               	.dbg	sym, "m", "00", auto, 0
00065Cr 1               	.dbg	sym, "sn", "00", auto, -1
00065Cr 1               
00065Cr 1               .segment	"CODE"
00065Cr 1               
00065Cr 1               	.dbg	line, "space-blimp.c", 265
00065Cr 1  20 rr rr     	jsr     pushax
00065Fr 1               	.dbg	line, "space-blimp.c", 268
00065Fr 1  20 rr rr     	jsr     decsp1
000662r 1  A9 rr        	lda     #<(S0008)
000664r 1  A2 rr        	ldx     #>(S0008)
000666r 1  20 rr rr     	jsr     pushax
000669r 1  A0 06        	ldy     #$06
00066Br 1  20 rr rr     	jsr     pushwysp
00066Er 1  A0 06        	ldy     #$06
000670r 1  20 rr rr     	jsr     ldaxysp
000673r 1  85 rr        	sta     ptr1
000675r 1  86 rr        	stx     ptr1+1
000677r 1  A2 00        	ldx     #$00
000679r 1  A1 rr        	lda     (ptr1,x)
00067Br 1  20 rr rr     	jsr     pusha0
00067Er 1  A0 06        	ldy     #$06
000680r 1  20 rr rr     	jsr     _printf
000683r 1               	.dbg	line, "space-blimp.c", 269
000683r 1  A9 rr        	lda     #<(S0009)
000685r 1  A2 rr        	ldx     #>(S0009)
000687r 1  20 rr rr     	jsr     pushax
00068Ar 1  A0 04        	ldy     #$04
00068Cr 1  20 rr rr     	jsr     ldaxysp
00068Fr 1  85 rr        	sta     ptr1
000691r 1  86 rr        	stx     ptr1+1
000693r 1  A0 01        	ldy     #$01
000695r 1  B1 rr        	lda     (ptr1),y
000697r 1  20 rr rr     	jsr     pusha0
00069Ar 1  A0 06        	ldy     #$06
00069Cr 1  20 rr rr     	jsr     ldaxysp
00069Fr 1  A0 17        	ldy     #$17
0006A1r 1  20 rr rr     	jsr     ldaxidx
0006A4r 1  85 rr        	sta     sreg
0006A6r 1  86 rr        	stx     sreg+1
0006A8r 1  A0 06        	ldy     #$06
0006AAr 1  20 rr rr     	jsr     ldaxysp
0006ADr 1  85 rr        	sta     ptr1
0006AFr 1  86 rr        	stx     ptr1+1
0006B1r 1  A0 15        	ldy     #$15
0006B3r 1  B1 rr        	lda     (ptr1),y
0006B5r 1  18           	clc
0006B6r 1  65 rr        	adc     sreg
0006B8r 1  A6 rr        	ldx     sreg+1
0006BAr 1  90 01        	bcc     L0004
0006BCr 1  E8           	inx
0006BDr 1  85 rr        L0004:	sta     ptr1
0006BFr 1  86 rr        	stx     ptr1+1
0006C1r 1  A2 00        	ldx     #$00
0006C3r 1  A1 rr        	lda     (ptr1,x)
0006C5r 1  20 rr rr     	jsr     pusha0
0006C8r 1  A0 06        	ldy     #$06
0006CAr 1  20 rr rr     	jsr     _printf
0006CDr 1               	.dbg	line, "space-blimp.c", 270
0006CDr 1  A9 rr        	lda     #<(S000A)
0006CFr 1  A2 rr        	ldx     #>(S000A)
0006D1r 1  20 rr rr     	jsr     pushax
0006D4r 1  A0 04        	ldy     #$04
0006D6r 1  20 rr rr     	jsr     ldaxysp
0006D9r 1  A0 03        	ldy     #$03
0006DBr 1  20 rr rr     	jsr     pushwidx
0006DEr 1  A0 06        	ldy     #$06
0006E0r 1  20 rr rr     	jsr     ldaxysp
0006E3r 1  A0 05        	ldy     #$05
0006E5r 1  20 rr rr     	jsr     pushwidx
0006E8r 1  A0 06        	ldy     #$06
0006EAr 1  20 rr rr     	jsr     _printf
0006EDr 1               	.dbg	line, "space-blimp.c", 271
0006EDr 1  A9 rr        	lda     #<(S000B)
0006EFr 1  A2 rr        	ldx     #>(S000B)
0006F1r 1  20 rr rr     	jsr     pushax
0006F4r 1  A0 04        	ldy     #$04
0006F6r 1  20 rr rr     	jsr     ldaxysp
0006F9r 1  85 rr        	sta     ptr1
0006FBr 1  86 rr        	stx     ptr1+1
0006FDr 1  A0 01        	ldy     #$01
0006FFr 1  B1 rr        	lda     (ptr1),y
000701r 1  20 rr rr     	jsr     pusha0
000704r 1  A0 04        	ldy     #$04
000706r 1  20 rr rr     	jsr     _printf
000709r 1               	.dbg	line, "space-blimp.c", 272
000709r 1  A0 02        	ldy     #$02
00070Br 1  20 rr rr     	jsr     ldaxysp
00070Er 1  85 rr        	sta     ptr1
000710r 1  86 rr        	stx     ptr1+1
000712r 1  A0 01        	ldy     #$01
000714r 1  B1 rr        	lda     (ptr1),y
000716r 1  88           	dey
000717r 1  91 rr        	sta     (sp),y
000719r 1               	.dbg	line, "space-blimp.c", 273
000719r 1  A9 rr        	lda     #<(S000C)
00071Br 1  A2 rr        	ldx     #>(S000C)
00071Dr 1  20 rr rr     	jsr     pushax
000720r 1  A0 02        	ldy     #$02
000722r 1  B1 rr        	lda     (sp),y
000724r 1  49 02        	eor     #$02
000726r 1  2D 15 D0     	and     $D015
000729r 1  20 rr rr     	jsr     pusha0
00072Cr 1               	.dbg	line, "space-blimp.c", 274
00072Cr 1  A0 04        	ldy     #$04
00072Er 1  B1 rr        	lda     (sp),y
000730r 1  0A           	asl     a
000731r 1  90 02        	bcc     L0002
000733r 1  A2 01        	ldx     #$01
000735r 1  85 rr        L0002:	sta     ptr1
000737r 1  86 rr        	stx     ptr1+1
000739r 1  18           	clc
00073Ar 1  A5 rr        	lda     ptr1
00073Cr 1  85 rr        	sta     ptr1
00073Er 1  A9 D0        	lda     #$D0
000740r 1  65 rr        	adc     ptr1+1
000742r 1  85 rr        	sta     ptr1+1
000744r 1  A2 00        	ldx     #$00
000746r 1  A1 rr        	lda     (ptr1,x)
000748r 1  20 rr rr     	jsr     pusha0
00074Br 1  A0 06        	ldy     #$06
00074Dr 1  B1 rr        	lda     (sp),y
00074Fr 1  0A           	asl     a
000750r 1  90 02        	bcc     L0003
000752r 1  A2 01        	ldx     #$01
000754r 1  85 rr        L0003:	sta     ptr1
000756r 1  86 rr        	stx     ptr1+1
000758r 1  18           	clc
000759r 1  A5 rr        	lda     ptr1
00075Br 1  85 rr        	sta     ptr1
00075Dr 1  A9 D0        	lda     #$D0
00075Fr 1  65 rr        	adc     ptr1+1
000761r 1  85 rr        	sta     ptr1+1
000763r 1  A0 01        	ldy     #$01
000765r 1  B1 rr        	lda     (ptr1),y
000767r 1  20 rr rr     	jsr     pusha0
00076Ar 1  A0 08        	ldy     #$08
00076Cr 1  20 rr rr     	jsr     _printf
00076Fr 1               	.dbg	line, "space-blimp.c", 275
00076Fr 1  4C rr rr     	jmp     incsp3
000772r 1               
000772r 1               	.dbg	line
000772r 1               .endproc
000772r 1               
000772r 1               ; ---------------------------------------------------------------
000772r 1               ; void __near__ draw_mob (struct MOB *m)
000772r 1               ; ---------------------------------------------------------------
000772r 1               
000772r 1               .segment	"CODE"
000772r 1               
000772r 1               .proc	_draw_mob: near
000772r 1               
000772r 1               	.dbg	func, "draw_mob", "00", extern, "_draw_mob"
000772r 1               	.dbg	sym, "m", "00", auto, 0
000772r 1               
000772r 1               .segment	"CODE"
000772r 1               
000772r 1               	.dbg	line, "space-blimp.c", 245
000772r 1  20 rr rr     	jsr     pushax
000775r 1               	.dbg	line, "space-blimp.c", 246
000775r 1  20 rr rr     	jsr     ldax0sp
000778r 1  85 rr        	sta     ptr1
00077Ar 1  86 rr        	stx     ptr1+1
00077Cr 1  A0 00        	ldy     #$00
00077Er 1  B1 rr        	lda     (ptr1),y
000780r 1  C9 01        	cmp     #$01
000782r 1  F0 03 4C rr  	jne     L0002
000786r 1  rr           
000787r 1               	.dbg	line, "space-blimp.c", 247
000787r 1  20 rr rr     	jsr     ldax0sp
00078Ar 1  85 rr        	sta     ptr1
00078Cr 1  86 rr        	stx     ptr1+1
00078Er 1  A0 01        	ldy     #$01
000790r 1  B1 rr        	lda     (ptr1),y
000792r 1  20 rr rr     	jsr     pusha
000795r 1               	.dbg	line, "space-blimp.c", 249
000795r 1  A2 D0        	ldx     #$D0
000797r 1  A9 15        	lda     #$15
000799r 1  20 rr rr     	jsr     pushax
00079Cr 1  A0 02        	ldy     #$02
00079Er 1  B1 rr        	lda     (sp),y
0007A0r 1  20 rr rr     	jsr     pusha
0007A3r 1  A0 05        	ldy     #$05
0007A5r 1  20 rr rr     	jsr     ldaxysp
0007A8r 1  85 rr        	sta     ptr1
0007AAr 1  86 rr        	stx     ptr1+1
0007ACr 1  A0 00        	ldy     #$00
0007AEr 1  B1 rr        	lda     (ptr1),y
0007B0r 1  20 rr rr     	jsr     _set_bit
0007B3r 1               	.dbg	line, "space-blimp.c", 251
0007B3r 1  A2 00        	ldx     #$00
0007B5r 1  A1 rr        	lda     (sp,x)
0007B7r 1  0A           	asl     a
0007B8r 1  90 01        	bcc     L0004
0007BAr 1  E8           	inx
0007BBr 1  85 rr        L0004:	sta     ptr1
0007BDr 1  86 rr        	stx     ptr1+1
0007BFr 1  18           	clc
0007C0r 1  A5 rr        	lda     ptr1
0007C2r 1  85 rr        	sta     sreg
0007C4r 1  A9 D0        	lda     #$D0
0007C6r 1  65 rr        	adc     ptr1+1
0007C8r 1  85 rr        	sta     sreg+1
0007CAr 1  A0 02        	ldy     #$02
0007CCr 1  20 rr rr     	jsr     ldaxysp
0007CFr 1  85 rr        	sta     ptr1
0007D1r 1  86 rr        	stx     ptr1+1
0007D3r 1  A0 04        	ldy     #$04
0007D5r 1  B1 rr        	lda     (ptr1),y
0007D7r 1  A0 01        	ldy     #$01
0007D9r 1  91 rr        	sta     (sreg),y
0007DBr 1               	.dbg	line, "space-blimp.c", 252
0007DBr 1  88           	dey
0007DCr 1  B1 rr        	lda     (sp),y
0007DEr 1  20 rr rr     	jsr     pusha
0007E1r 1  A0 03        	ldy     #$03
0007E3r 1  20 rr rr     	jsr     ldaxysp
0007E6r 1  A0 03        	ldy     #$03
0007E8r 1  20 rr rr     	jsr     ldaxidx
0007EBr 1  20 rr rr     	jsr     _set_sprite_x
0007EEr 1               	.dbg	line, "space-blimp.c", 254
0007EEr 1  A0 00        	ldy     #$00
0007F0r 1  B1 rr        	lda     (sp),y
0007F2r 1  18           	clc
0007F3r 1  6D rr rr     	adc     _sprite_data_vicptr
0007F6r 1  AE rr rr     	ldx     _sprite_data_vicptr+1
0007F9r 1  90 01        	bcc     L0005
0007FBr 1  E8           	inx
0007FCr 1  85 rr        L0005:	sta     ptr2
0007FEr 1  86 rr        	stx     ptr2+1
000800r 1  A0 02        	ldy     #$02
000802r 1  20 rr rr     	jsr     ldaxysp
000805r 1  A0 17        	ldy     #$17
000807r 1  20 rr rr     	jsr     ldaxidx
00080Ar 1  85 rr        	sta     sreg
00080Cr 1  86 rr        	stx     sreg+1
00080Er 1  A0 02        	ldy     #$02
000810r 1  20 rr rr     	jsr     ldaxysp
000813r 1  85 rr        	sta     ptr1
000815r 1  86 rr        	stx     ptr1+1
000817r 1  A0 15        	ldy     #$15
000819r 1  B1 rr        	lda     (ptr1),y
00081Br 1  18           	clc
00081Cr 1  65 rr        	adc     sreg
00081Er 1  A6 rr        	ldx     sreg+1
000820r 1  90 01        	bcc     L0006
000822r 1  E8           	inx
000823r 1  85 rr        L0006:	sta     ptr1
000825r 1  86 rr        	stx     ptr1+1
000827r 1  A0 00        	ldy     #$00
000829r 1  B1 rr        	lda     (ptr1),y
00082Br 1  91 rr        	sta     (ptr2),y
00082Dr 1               	.dbg	line, "space-blimp.c", 256
00082Dr 1  A2 D0        	ldx     #$D0
00082Fr 1  A9 1D        	lda     #$1D
000831r 1  20 rr rr     	jsr     pushax
000834r 1  A0 02        	ldy     #$02
000836r 1  B1 rr        	lda     (sp),y
000838r 1  20 rr rr     	jsr     pusha
00083Br 1  A0 05        	ldy     #$05
00083Dr 1  20 rr rr     	jsr     ldaxysp
000840r 1  85 rr        	sta     ptr1
000842r 1  86 rr        	stx     ptr1+1
000844r 1  A0 08        	ldy     #$08
000846r 1  B1 rr        	lda     (ptr1),y
000848r 1  20 rr rr     	jsr     _set_bit
00084Br 1               	.dbg	line, "space-blimp.c", 257
00084Br 1  A2 D0        	ldx     #$D0
00084Dr 1  A9 17        	lda     #$17
00084Fr 1  20 rr rr     	jsr     pushax
000852r 1  A0 02        	ldy     #$02
000854r 1  B1 rr        	lda     (sp),y
000856r 1  20 rr rr     	jsr     pusha
000859r 1  A0 05        	ldy     #$05
00085Br 1  20 rr rr     	jsr     ldaxysp
00085Er 1  85 rr        	sta     ptr1
000860r 1  86 rr        	stx     ptr1+1
000862r 1  A0 09        	ldy     #$09
000864r 1  B1 rr        	lda     (ptr1),y
000866r 1  20 rr rr     	jsr     _set_bit
000869r 1               	.dbg	line, "space-blimp.c", 258
000869r 1  20 rr rr     	jsr     incsp1
00086Cr 1               	.dbg	line, "space-blimp.c", 262
00086Cr 1  4C rr rr     L0002:	jmp     incsp2
00086Fr 1               
00086Fr 1               	.dbg	line
00086Fr 1               .endproc
00086Fr 1               
00086Fr 1               ; ---------------------------------------------------------------
00086Fr 1               ; void __near__ next_sprite_ptr (struct MOB *m)
00086Fr 1               ; ---------------------------------------------------------------
00086Fr 1               
00086Fr 1               .segment	"CODE"
00086Fr 1               
00086Fr 1               .proc	_next_sprite_ptr: near
00086Fr 1               
00086Fr 1               	.dbg	func, "next_sprite_ptr", "00", extern, "_next_sprite_ptr"
00086Fr 1               	.dbg	sym, "m", "00", auto, 0
00086Fr 1               
00086Fr 1               .segment	"CODE"
00086Fr 1               
00086Fr 1               	.dbg	line, "space-blimp.c", 370
00086Fr 1  20 rr rr     	jsr     pushax
000872r 1               	.dbg	line, "space-blimp.c", 371
000872r 1  20 rr rr     	jsr     pushw0sp
000875r 1  A0 03        	ldy     #$03
000877r 1  20 rr rr     	jsr     ldaxysp
00087Ar 1  85 rr        	sta     ptr1
00087Cr 1  86 rr        	stx     ptr1+1
00087Er 1  A0 15        	ldy     #$15
000880r 1  A2 00        	ldx     #$00
000882r 1  B1 rr        	lda     (ptr1),y
000884r 1  20 rr rr     	jsr     incax1
000887r 1  20 rr rr     	jsr     pushax
00088Ar 1  A0 05        	ldy     #$05
00088Cr 1  20 rr rr     	jsr     ldaxysp
00088Fr 1  85 rr        	sta     ptr1
000891r 1  86 rr        	stx     ptr1+1
000893r 1  A0 14        	ldy     #$14
000895r 1  A2 00        	ldx     #$00
000897r 1  B1 rr        	lda     (ptr1),y
000899r 1  20 rr rr     	jsr     tosmoda0
00089Cr 1  A0 15        	ldy     #$15
00089Er 1  20 rr rr     	jsr     staspidx
0008A1r 1               	.dbg	line, "space-blimp.c", 372
0008A1r 1  4C rr rr     	jmp     incsp2
0008A4r 1               
0008A4r 1               	.dbg	line
0008A4r 1               .endproc
0008A4r 1               
0008A4r 1               ; ---------------------------------------------------------------
0008A4r 1               ; void __near__ prev_sprite_ptr (struct MOB *m)
0008A4r 1               ; ---------------------------------------------------------------
0008A4r 1               
0008A4r 1               .segment	"CODE"
0008A4r 1               
0008A4r 1               .proc	_prev_sprite_ptr: near
0008A4r 1               
0008A4r 1               	.dbg	func, "prev_sprite_ptr", "00", extern, "_prev_sprite_ptr"
0008A4r 1               	.dbg	sym, "m", "00", auto, 0
0008A4r 1               
0008A4r 1               .segment	"CODE"
0008A4r 1               
0008A4r 1               	.dbg	line, "space-blimp.c", 374
0008A4r 1  20 rr rr     	jsr     pushax
0008A7r 1               	.dbg	line, "space-blimp.c", 375
0008A7r 1  20 rr rr     	jsr     pushw0sp
0008AAr 1  A0 03        	ldy     #$03
0008ACr 1  20 rr rr     	jsr     ldaxysp
0008AFr 1  85 rr        	sta     ptr1
0008B1r 1  86 rr        	stx     ptr1+1
0008B3r 1  A0 15        	ldy     #$15
0008B5r 1  A2 00        	ldx     #$00
0008B7r 1  B1 rr        	lda     (ptr1),y
0008B9r 1  20 rr rr     	jsr     decax1
0008BCr 1  20 rr rr     	jsr     pushax
0008BFr 1  A0 05        	ldy     #$05
0008C1r 1  20 rr rr     	jsr     ldaxysp
0008C4r 1  85 rr        	sta     ptr1
0008C6r 1  86 rr        	stx     ptr1+1
0008C8r 1  A0 14        	ldy     #$14
0008CAr 1  A2 00        	ldx     #$00
0008CCr 1  B1 rr        	lda     (ptr1),y
0008CEr 1  20 rr rr     	jsr     tosmoda0
0008D1r 1  A0 15        	ldy     #$15
0008D3r 1  20 rr rr     	jsr     staspidx
0008D6r 1               	.dbg	line, "space-blimp.c", 376
0008D6r 1  4C rr rr     	jmp     incsp2
0008D9r 1               
0008D9r 1               	.dbg	line
0008D9r 1               .endproc
0008D9r 1               
0008D9r 1               ; ---------------------------------------------------------------
0008D9r 1               ; int __near__ __cdecl__ main (int argc, char **argv)
0008D9r 1               ; ---------------------------------------------------------------
0008D9r 1               
0008D9r 1               .segment	"CODE"
0008D9r 1               
0008D9r 1               .proc	_main: near
0008D9r 1               
0008D9r 1               	.dbg	func, "main", "00", extern, "_main"
0008D9r 1               	.dbg	sym, "argc", "00", auto, 2
0008D9r 1               	.dbg	sym, "argv", "00", auto, 0
0008D9r 1               	.dbg	sym, "ret_code", "00", auto, -2
0008D9r 1               	.dbg	sym, "ret_code2", "00", auto, -4
0008D9r 1               	.dbg	sym, "dev", "00", auto, -5
0008D9r 1               	.dbg	sym, "t", "00", auto, -6
0008D9r 1               
0008D9r 1               .segment	"CODE"
0008D9r 1               
0008D9r 1               	.dbg	line, "space-blimp.c", 33
0008D9r 1  20 rr rr     	jsr     decsp5
0008DCr 1  A9 00        	lda     #$00
0008DEr 1  20 rr rr     	jsr     pusha
0008E1r 1               	.dbg	line, "space-blimp.c", 35
0008E1r 1  20 rr rr     	jsr     _clr_screen
0008E4r 1               	.dbg	line, "space-blimp.c", 41
0008E4r 1  20 rr rr     	jsr     _get_device_num
0008E7r 1  A0 01        	ldy     #$01
0008E9r 1  91 rr        	sta     (sp),y
0008EBr 1               	.dbg	line, "space-blimp.c", 42
0008EBr 1  AD rr rr     	lda     _fn
0008EEr 1  AE rr rr     	ldx     _fn+1
0008F1r 1  20 rr rr     	jsr     pushax
0008F4r 1  A0 03        	ldy     #$03
0008F6r 1  B1 rr        	lda     (sp),y
0008F8r 1  20 rr rr     	jsr     _load_sprites
0008FBr 1  A0 04        	ldy     #$04
0008FDr 1  20 rr rr     	jsr     staxysp
000900r 1               	.dbg	line, "space-blimp.c", 44
000900r 1  E0 00        	cpx     #$00
000902r 1  D0 04        	bne     L000F
000904r 1  C9 00        	cmp     #$00
000906r 1  F0 5C        	beq     L0002
000908r 1               	.dbg	line, "space-blimp.c", 45
000908r 1  A9 rr        L000F:	lda     #<(S0003)
00090Ar 1  A2 rr        	ldx     #>(S0003)
00090Cr 1  20 rr rr     	jsr     pushax
00090Fr 1               	.dbg	line, "space-blimp.c", 46
00090Fr 1  AD rr rr     	lda     _fn
000912r 1  AE rr rr     	ldx     _fn+1
000915r 1  20 rr rr     	jsr     pushax
000918r 1  A0 0B        	ldy     #$0B
00091Ar 1  20 rr rr     	jsr     pushwysp
00091Dr 1  AD rr rr     	lda     _fn2
000920r 1  AE rr rr     	ldx     _fn2+1
000923r 1  20 rr rr     	jsr     pushax
000926r 1  A0 08        	ldy     #$08
000928r 1  20 rr rr     	jsr     _printf
00092Br 1               	.dbg	line, "space-blimp.c", 47
00092Br 1  AD rr rr     	lda     _fn2
00092Er 1  AE rr rr     	ldx     _fn2+1
000931r 1  20 rr rr     	jsr     pushax
000934r 1  A0 03        	ldy     #$03
000936r 1  B1 rr        	lda     (sp),y
000938r 1  20 rr rr     	jsr     _load_sprites
00093Br 1  A0 02        	ldy     #$02
00093Dr 1  20 rr rr     	jsr     staxysp
000940r 1               	.dbg	line, "space-blimp.c", 49
000940r 1  E0 00        	cpx     #$00
000942r 1  D0 04        	bne     L0010
000944r 1  C9 00        	cmp     #$00
000946r 1  F0 28        	beq     L0006
000948r 1               	.dbg	line, "space-blimp.c", 50
000948r 1  A9 rr        L0010:	lda     #<(S0004)
00094Ar 1  A2 rr        	ldx     #>(S0004)
00094Cr 1  20 rr rr     	jsr     pushax
00094Fr 1  A0 09        	ldy     #$09
000951r 1  20 rr rr     	jsr     pushwysp
000954r 1  A0 04        	ldy     #$04
000956r 1  20 rr rr     	jsr     _printf
000959r 1               	.dbg	line, "space-blimp.c", 51
000959r 1  A0 05        	ldy     #$05
00095Br 1  20 rr rr     	jsr     ldaxysp
00095Er 1  20 rr rr     	jsr     _exit
000961r 1               	.dbg	line, "space-blimp.c", 54
000961r 1  4C rr rr     	jmp     L0006
000964r 1               	.dbg	line, "space-blimp.c", 55
000964r 1  A9 rr        L0002:	lda     #<(S0005)
000966r 1  A2 rr        	ldx     #>(S0005)
000968r 1  20 rr rr     	jsr     pushax
00096Br 1  A0 02        	ldy     #$02
00096Dr 1  20 rr rr     	jsr     _printf
000970r 1               	.dbg	line, "space-blimp.c", 58
000970r 1  A9 03        L0006:	lda     #$03
000972r 1  8D 15 D0     	sta     $D015
000975r 1               	.dbg	line, "space-blimp.c", 59
000975r 1  A9 FF        	lda     #$FF
000977r 1  8D 1C D0     	sta     $D01C
00097Ar 1               	.dbg	line, "space-blimp.c", 61
00097Ar 1  A9 02        	lda     #$02
00097Cr 1  8D 25 D0     	sta     $D025
00097Fr 1               	.dbg	line, "space-blimp.c", 62
00097Fr 1  A9 01        	lda     #$01
000981r 1  8D 26 D0     	sta     $D026
000984r 1               	.dbg	line, "space-blimp.c", 64
000984r 1  A9 0B        	lda     #$0B
000986r 1  8D 27 D0     	sta     $D027
000989r 1               	.dbg	line, "space-blimp.c", 65
000989r 1  8D 28 D0     	sta     $D028
00098Cr 1               	.dbg	line, "space-blimp.c", 67
00098Cr 1  A9 rr        	lda     #<(S0006)
00098Er 1  A2 rr        	ldx     #>(S0006)
000990r 1  20 rr rr     	jsr     pushax
000993r 1  A0 02        	ldy     #$02
000995r 1  20 rr rr     	jsr     _printf
000998r 1               	.dbg	line, "space-blimp.c", 69
000998r 1  A9 00        	lda     #$00
00099Ar 1  8D rr rr     	sta     _x_counter+1
00099Dr 1               	.dbg	line, "space-blimp.c", 70
00099Dr 1  AA           	tax
00099Er 1  8D rr rr     	sta     _y_counter+1
0009A1r 1               	.dbg	line, "space-blimp.c", 72
0009A1r 1  20 rr rr     	jsr     _init_mobs
0009A4r 1               	.dbg	line, "space-blimp.c", 73
0009A4r 1  20 rr rr     L000D:	jsr     _draw_mobs
0009A7r 1               	.dbg	line, "space-blimp.c", 81
0009A7r 1  A2 00        	ldx     #$00
0009A9r 1  AD 12 D0     L000E:	lda     $D012
0009ACr 1  C9 FB        	cmp     #$FB
0009AEr 1  90 F9        	bcc     L000E
0009B0r 1               	.dbg	line, "space-blimp.c", 84
0009B0r 1  20 rr rr     	jsr     _move_mobs
0009B3r 1               	.dbg	line, "space-blimp.c", 78
0009B3r 1  4C rr rr     	jmp     L000D
0009B6r 1               
0009B6r 1               	.dbg	line
0009B6r 1               .endproc
0009B6r 1               
0009B6r 1               
